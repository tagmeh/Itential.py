[project]
name = "itential.py"
version = "2.0.0"
authors = [{ name = "Tagmeh" }]
description = "An opinionated Itential API library."
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Natural Language :: English",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
]
dependencies = [
    "requests",
    "pydantic"
]

[project.urls]
"Homepage" = "https://github.com/tagmeh/Itential.py"
"Bug Tracker" = "https://github.com/tagmeh/Itential.py/issues"

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line_length = 120

[tool.mypy]
python_version = "3.10"
disallow_untyped_defs = true
ignore_missing_imports = true
strict = true
exclude = ["tests", "build", "dist", "itential.py.egg-info"]
plugins = ['pydantic.mypy']

[tool.coverage.run]
branch = true  # Show branch coverage.
omit = ['tests']  # Don't run against these directories.

[tool.coverage.report]
include = ["itential/**"]  # We only care about the coverage within the main package.
# Regexes for lines to exclude from consideration.
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]

ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"

[tool.pytest.ini_options]
